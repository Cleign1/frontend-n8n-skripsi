services:
  # Service 1: Redis for Celery message broker and backend edited from github terminal
  redis:
    image: redis:alpine
    container_name: fe-n8n-redis
    ports:
      - "6379:6379" # Maps container port 6379 to host port 6380
    restart: always
    networks:
      - fe-n8n-network

  # Service 2: The Flask Web Application
  app:
    build: . # Build the image from the Dockerfile in the current directory
    container_name: fe-n8n-app
    ports:
      - "5000:5000" # Maps container port 5000 to host port 5000
    depends_on:
      - redis # Ensures redis starts before the app
    volumes:
      - app:/app
    restart: always
    env_file: .env
    environment:
      - TZ=Asia/Jakarta
    networks:
      - fe-n8n-network
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - .git/
            - .idea/
            - __pycache__/
        - action: rebuild
          path: requirements.txt

  # Service 3: The Celery Worker
  worker:
    build: . # Also builds from the same Dockerfile
    container_name: fe-n8n-worker
    # This command overrides the Dockerfile's CMD to start the celery worker
    command: uv run celery -A make_celery.celery worker --loglevel=info --pool=solo -n worker1@%h
    depends_on:
      - redis # Ensures redis starts before the worker
    volumes:
      - app:/app
    restart: always
    env_file: .env
    environment:
      - INTERNAL_API_BASE_URL=http://app:5000
      - TZ=Asia/Jakarta
    networks:
      - fe-n8n-network
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
          ignore:
            - .git/
            - .idea/
            - __pycache__/
        - action: rebuild
          path: requirements.txt

volumes:
  app:

networks:
  fe-n8n-network:
