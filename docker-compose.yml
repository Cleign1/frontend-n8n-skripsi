services:
# Service 1: Redis for Celery message broker and backend
  redis:
    image: redis:alpine
    container_name: fe-n8n-redis
    # ports:
    #   - "6379:6379"
    restart: always
    network_mode: "host"

  # Service 2: The Flask Web Application (served with Gunicorn)
  app:
    build: . # Build the image from the Dockerfile in the current directory
    container_name: fe-n8n-app
    # ports:
    #   - "5000:5000" # Maps container port 5000 to host port 5000
    command: flask --app run.py run --host=0.0.0.0
    volumes:
      - .:/app # Mounts the project directory for live code changes
    restart: always
    env_file: .env
    environment:
      - TZ=Asia/Jakarta
    network_mode: "host"


  # Service 3: The Celery Worker
  worker:
    build: . # Also builds from the same Dockerfile
    container_name: fe-n8n-worker
    # This command overrides the Dockerfile's CMD to start the celery worker
    command: celery -A make_celery.celery worker --loglevel=info --pool=solo -n worker1@%h
    volumes:
      - .:/app # Mounts the project directory for live code changes
    restart: always
    env_file: .env
    environment:
      # The worker communicates with the 'app' service over the internal Docker network
      - TZ=Asia/Jakarta
    network_mode: "host"

